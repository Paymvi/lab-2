Things I learned:

#1
If you don't have a folder use:
npm create vite@latest my-map-app
cd my-map-app
npm install
npm run dev

But if you already do (like with this project because I cloned form github)
Go into your folder and just do "npm creat vite@latest"
cd your-cloned-folder
npm create vite@latest .



#2
Install a react-leaflet to make it easier to use leaflet

What is leaflet?
It is an open source javascript library for interactive maps
It uses tile provilers like OpenStreetMap

npm install leaflet react-leaflet

Note: It also installs leaflet itself


#3
To find the coordinates on a map...
Go to google maps, find the exact spot. then right click
and click on "Whats here"



#4
I learned this is the structure of a vite/react project

my-map-app/
├─ node_modules/
├─ public/
├─ src/
│  ├─ App.jsx       ← Your main component (place your code here)
│  ├─ main.jsx      ← Entry point (renders <App /> into the DOM)
│  └─ index.css     ← Optional CSS
├─ package.json
├─ vite.config.js
└─ ...


#5
"detectRetina={true}" increases definition
"<Popup>" is a thing
".toFixed" rounds numbers
You have to use "div className" not "div class" for valid JSX
You can use "gap" when you use flex to add space in between buttons
You can target the last element with "last-child"

#6
We use "npm run dev". and when it sees "dev" (or something like that) it looks for scripts
dev: runs
build: doesn't run
lint: for debugging
preview: lightweight debugging run

What is "eslint" for?

Note to self: learn more about regex


#7
How to pull the latest commit and override local changes
git fetch origin
git reset --hard origin/main
git clean -fd